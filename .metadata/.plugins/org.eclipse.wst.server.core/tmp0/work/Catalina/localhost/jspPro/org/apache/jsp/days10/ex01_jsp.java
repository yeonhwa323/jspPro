/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-05-02 02:38:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.days10;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex01_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1098678824000L));
    _jspx_dependants.put("jar:file:/C:/E/Sist/Class/Workspace/JSPClass/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/jspPro/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"http://localhost/jspPro/images/SiSt.ico\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/jspPro/resources/cdn-main/example.css\">\r\n");
      out.write("<script src=\"/jspPro/resources/cdn-main/example.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(" span.material-symbols-outlined{\r\n");
      out.write("    vertical-align: text-bottom;\r\n");
      out.write(" }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("  <h1 class=\"main\"><a href=\"#\" style=\"position: absolute;top:30px;\">yeon HOme</a></h1>\r\n");
      out.write("  <ul>\r\n");
      out.write("    <li><a href=\"#\">로그인</a></li>\r\n");
      out.write("    <li><a href=\"#\">회원가입</a></li>\r\n");
      out.write("  </ul>\r\n");
      out.write("</header>\r\n");
      out.write("<h3>\r\n");
      out.write("  <span class=\"material-symbols-outlined\">view_list</span> jsp days00\r\n");
      out.write("</h3>\r\n");
      out.write("<div>\r\n");
      out.write("  <a href=\"/jspPro/days10/replyboard/list.do\">목록보기</a>	\r\n");
      out.write("\r\n");
      out.write("  <xmp class=\"code\">\r\n");
      out.write("    1. 계층형(답변형) 게시판 - MVC 패턴 작업\r\n");
      out.write("     2. days10\r\n");
      out.write("           ㄴ replyboard 폴더 추가\r\n");
      out.write("                ㄴ emoticon\r\n");
      out.write("                ㄴ images      \r\n");
      out.write("     *** 3. 로직 이해...*** \r\n");
      out.write("     [DB]\r\n");
      out.write("     글번호 제목           작성자 ... \r\n");
      out.write("     1      첫번째게시글   홍길동(새글)\r\n");
      out.write("     2      두번째게시글   서영학(새글)\r\n");
      out.write("     3      세번째게시글   정창기(새글)\r\n");
      out.write("     4      2-1 답글       정창기(답글)\r\n");
      out.write("     5      2-1-1 답글     홍길동(답글)\r\n");
      out.write("     6      네번째게시글   정창기(새글)\r\n");
      out.write("     7      6-1 답글       홍길동(답글)\r\n");
      out.write("     8      2-2 답글       정창기(답글)\r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("     [화면출력] order by 글번호 desc  \r\n");
      out.write("     글번호 제목           작성자 ... \r\n");
      out.write("     6      네번째게시글   정창기(새글)\r\n");
      out.write("     7        ㄴ6-1 답글       홍길동(답글)\r\n");
      out.write("     3      세번째게시글   정창기(새글)\r\n");
      out.write("     2      두번째게시글   서영학(새글)\r\n");
      out.write("     8        ㄴ 2-2 답글       정창기(답글)\r\n");
      out.write("     4        ㄴ 2-1 답글  정창기(답글) \r\n");
      out.write("     5          ㄴ2-1-1 답글     홍길동(답글) \r\n");
      out.write("     1      첫번째게시글   홍길동(새글)   \r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("     *** 첫 번째 방법) 컬럼 3개 추가   *** 풀이\r\n");
      out.write("     글번호(PK) 제목 작성자  + 글그룹(REF) + 그룹 순서(STEP) + 깊이(DEPTH)\r\n");
      out.write("      3:05 수업시작~\r\n");
      out.write("     \r\n");
      out.write("     규칙1) 새글이 작성되면 항상 글그룹(==글번호) STEP 1 DEPTH 0\r\n");
      out.write("     규칙2) 답글을 작성할 때\r\n");
      out.write("			항상 부모글(예:[2]) 이 존재해야 한다. \r\n");
      out.write("			부모글 [2]   답글글그룹==부모글그룹\r\n");
      out.write("									2\r\n");
      out.write("									  부모글의 순서 +1\r\n");
      out.write("									  		2\r\n");
      out.write("									  			부모글의 깊이 +1\r\n");
      out.write("									  				1 \r\n");
      out.write("	 규칙3) 같은 그룹내의 부모순서보다 큰 순서는 1증가 (업데이트 실시)\r\n");
      out.write("	 \r\n");
      out.write("	 \r\n");
      out.write("     [DB]\r\n");
      out.write("     글번호 제목           작성자 ...     REF		STEP	DEPTH\r\n");
      out.write("     1		첫번째게시글   홍길동(새글)	글번호1		1		0\r\n");
      out.write("     2		두번째게시글   서영학(새글)		2		1		0\r\n");
      out.write("     3		세번째게시글   정창기(새글)		3		1		0      \r\n");
      out.write("     4		2-1 답글	   정창기(답글)		2		3		1      \r\n");
      out.write("     5		4-1 답글	   홍길동(답글)		2		4		2      \r\n");
      out.write("     6		2-2 답글	   박명수(답글)		2		2		1      \r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("     [화면출력]\r\n");
      out.write("     order by REF desc, STEP asc  \r\n");
      out.write("     글번호 제목           작성자 ...\r\n");
      out.write("     3		세번째게시글   정창기(새글)		3		1		0 \r\n");
      out.write("     2		두번째게시글   서영학(새글)		2		1		0\r\n");
      out.write("     6		  ㄴ2-2 답글   박명수(답글)		2		2		1\r\n");
      out.write("     4		  ㄴ2-1 답글   정창기(새글)		2		3		1\r\n");
      out.write("     5		     ㄴ4-1 답글	홍길동(답글)	2		4		2\r\n");
      out.write("     1		첫번째게시글   홍길동(새글)	글번호1		1		0       \r\n");
      out.write("     \r\n");
      out.write("    -------------------------------------------------------------- \r\n");
      out.write("     두 번째 방법) 컬럼 2개 추가     \r\n");
      out.write("     [DB]\r\n");
      out.write("     글번호 제목           작성자 ...     REFSTEP	DEPTH\r\n");
      out.write("     1		첫번째게시글   홍길동(새글)	   1000 	  0\r\n");
      out.write("     2		두번째게시글   서영학(새글)	   2000 	  0\r\n");
      out.write("     3		세번째게시글   정창기(새글)	   3000 	  0\r\n");
      out.write("     4		2-1			   정창기(새글)	   1998 	  1\r\n");
      out.write("     5		4-1			   서영학(새글)	   1997 	  2\r\n");
      out.write("     6		2-2			   정창기(새글)	   1999 	  1\r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("     [화면출력]\r\n");
      out.write("     order by REFSTEP desc  \r\n");
      out.write("     글번호 제목           작성자 ...     REFSTEP	DEPTH\r\n");
      out.write("     3		세번째게시글   정창기(새글)	   3000		  0\r\n");
      out.write("     2		두번째게시글   서영학(새글)	   2000 	  0\r\n");
      out.write("     6		  ㄴ2-2		   정창기(새글)	   1999 	  1\r\n");
      out.write("     4		  ㄴ2-1		   정창기(새글)	   1998 	  1\r\n");
      out.write("     5		    ㄴ4-1	   서영학(새글)	   1997 	  2\r\n");
      out.write("     1		첫번째게시글   홍길동(새글)	   1000 	  0\r\n");
      out.write("     \r\n");
      out.write(" -- 테이블 생성\r\n");
      out.write("CREATE TABLE \"SCOTT\".\"REPLYBOARD\" \r\n");
      out.write("   (   \r\n");
      out.write("    \"NUM\" NUMBER NOT NULL ENABLE,     -- 글번호\r\n");
      out.write("   \"WRITER\" VARCHAR2(12 BYTE) NOT NULL ENABLE,  --작성자 \r\n");
      out.write("   \"EMAIL\" VARCHAR2(30 BYTE) NOT NULL ENABLE,   --이메일\r\n");
      out.write("   \"SUBJECT\" VARCHAR2(50 BYTE) NOT NULL ENABLE,  --제목\r\n");
      out.write("   \"PASS\" VARCHAR2(10 BYTE) NOT NULL ENABLE,  --비밀번호\r\n");
      out.write("   \"READCOUNT\" NUMBER(5,0) DEFAULT 0 NOT NULL ENABLE,  --조회수 \r\n");
      out.write("   \"REGDATE\" DATE DEFAULT sysdate NOT NULL ENABLE,   --작성일\r\n");
      out.write("   \"CONTENT\" CLOB NOT NULL ENABLE,  --글내용\r\n");
      out.write("   \"IP\" VARCHAR2(20 BYTE) NOT NULL ENABLE, --IP주소 \r\n");
      out.write("   \r\n");
      out.write("   \"REF\" NUMBER(5,0) DEFAULT 0 NOT NULL ENABLE,  --그룹 \r\n");
      out.write("   \"STEP\" NUMBER(3,0) DEFAULT 1 NOT NULL ENABLE,  --순번\r\n");
      out.write("   \"DEPTH\" NUMBER(3,0) DEFAULT 0 NOT NULL ENABLE,  --깊이\r\n");
      out.write("   \r\n");
      out.write("    PRIMARY KEY (\"NUM\")\r\n");
      out.write("  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS \r\n");
      out.write("  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\r\n");
      out.write("  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\r\n");
      out.write("  TABLESPACE \"USERS\"  ENABLE\r\n");
      out.write("   ) SEGMENT CREATION IMMEDIATE \r\n");
      out.write("  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING\r\n");
      out.write("  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\r\n");
      out.write("  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)\r\n");
      out.write("  TABLESPACE \"USERS\" \r\n");
      out.write(" LOB (\"CONTENT\") STORE AS BASICFILE (\r\n");
      out.write("  TABLESPACE \"USERS\" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION \r\n");
      out.write("  NOCACHE LOGGING \r\n");
      out.write("  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\r\n");
      out.write("  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;\r\n");
      out.write("       \r\n");
      out.write("CREATE SEQUENCE SEQ_REPLYBOARD;\r\n");
      out.write("   \r\n");
      out.write("   commandHandler.properties 생성 후 패키지 생성\r\n");
      out.write("   web.xml\r\n");
      out.write("   DispatcherServlet.java\r\n");
      out.write("   commandHandler.java\r\n");
      out.write("   list.jsp 생성\r\n");
      out.write("   \r\n");
      out.write("   days10.replyboard.command  패키지  \r\n");
      out.write("   days10.replyboard.controller  패키지  \r\n");
      out.write("   days10.replyboard.domain  패키지  \r\n");
      out.write("   days10.replyboard.persistence  패키지  \r\n");
      out.write("   	ㄴ IReplyBoard.java   인터페이스\r\n");
      out.write("   	    ㄴ ReplyBoardDAO.java 클래스\r\n");
      out.write("   days10.replyboard.service  패키지  \r\n");
      out.write("     \r\n");
      out.write("  </xmp>  \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
