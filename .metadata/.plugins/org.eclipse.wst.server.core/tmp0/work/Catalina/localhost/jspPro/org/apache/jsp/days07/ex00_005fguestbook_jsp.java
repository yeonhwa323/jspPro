/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-04-26 08:49:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.days07;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex00_005fguestbook_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1098678824000L));
    _jspx_dependants.put("jar:file:/C:/E/Sist/Class/Workspace/JSPClass/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/jspPro/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>2023. 12. 15. 오후 12:45:29</title>\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"../images/SiSt.ico\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3>ex00_guestbook.jsp</h3>\r\n");
      out.write("\r\n");
      out.write("<a href=\"/jspPro/sample/guestbook/list.do\">방명록 목록 list.do</a>\r\n");
      out.write("\r\n");
      out.write("<pre>\r\n");
      out.write("   20장(읽기.)\r\n");
      out.write("   p 427 Chapter 15  웹 어플리케이션의 일반적인 구성\r\n");
      out.write("                             + 방명록 구현\r\n");
      out.write("                             + MVC 패턴으로 구현\r\n");
      out.write("   1. 웹 어플리케이션을 개발할 때 [전형적인 구조]가 있다.\r\n");
      out.write("   2. 웹 어플리케이션의 전형적인 구성 요소 ( MVC )\r\n");
      out.write("     - 컨트롤러\r\n");
      out.write("     - 핸들러\r\n");
      out.write("     - jsp 뷰페이지\r\n");
      out.write("     - 서비스 클래스 \r\n");
      out.write("     - DAO 클래스\r\n");
      out.write("     \r\n");
      out.write("      - 한 번 개발 완료 !!! + 지속적으로 유지 보수.\r\n");
      out.write("                 X                      관리( 유지보수 )  쉽도록 구성 => MVC 패턴\r\n");
      out.write("     p 429  그림 15.5\r\n");
      out.write("     - JSP  - MVC 프레임워크 - 서비스클래스 -> DAO 클래스   \r\n");
      out.write("       JSP                               - 서비스클래스 -> DAO 클래스   \r\n");
      out.write("       JSP                               - 서비스클래스 -> DAO 클래스   \r\n");
      out.write("       JSP                               - 서비스클래스 -> DAO 클래스\r\n");
      out.write("       \r\n");
      out.write("       list.do -> [ MVC         ]\r\n");
      out.write("                       C  -M(핸들러)- 서비스클래스 -> DAO 클래스    \r\n");
      out.write("                  <-  V[list.jsp]\r\n");
      out.write("                       \r\n");
      out.write("      [1]  com.util.JdbcUtil.java   p 435   \r\n");
      out.write("      [2]  방명록 구현.....  p 444\r\n");
      out.write("             MessageDTO\r\n");
      out.write("             MessageDAO\r\n");
      out.write("             \r\n");
      out.write("             GetMessageService\r\n");
      out.write("             WriteMessageService\r\n");
      out.write("             DeleteMessageService\r\n");
      out.write("             \r\n");
      out.write("             ConnectionProvider     O\r\n");
      out.write("             JdbcUtil                        O\r\n");
      out.write("             \r\n");
      out.write("             [MVC 패턴]\r\n");
      out.write("             1. 컨트롤러\r\n");
      out.write("             2. comm\r\n");
      out.write("             andHandler.properties\r\n");
      out.write("        \r\n");
      out.write("       [3] web.xml       -> web_days10.xml  복사 붙이기.\r\n");
      out.write("             web.xml 사용\r\n");
      out.write("                 1. DBCP 설정부분\r\n");
      out.write("                 2. 인코딩 필터\r\n");
      out.write("                 \r\n");
      out.write("        [4]. days10 폴더\r\n");
      out.write("                   ㄴ guestbook        폴더 생성\r\n");
      out.write("                            ㄴ images     폴더 추가.\r\n");
      out.write("                    \r\n");
      out.write("        [5] 방명록 테이블 생성.     p 446  MySQL \r\n");
      out.write("		        ㄱ. \r\n");
      out.write("		       create table guestbook_message\r\n");
      out.write("			   (\r\n");
      out.write("			       message_id number not null primary key\r\n");
      out.write("			      , guest_name varchar2(50) not null\r\n");
      out.write("			      , password varchar2(10) not null\r\n");
      out.write("			      , message clob not  null\r\n");
      out.write("			   ) ;    \r\n");
      out.write("		       ㄴ.\r\n");
      out.write("		       create sequence seq_guestbook_message;         \\\r\n");
      out.write("		       \r\n");
      out.write("		        Table          GUESTBOOK_MESSAGE                  이(가) 생성되었습니다.\r\n");
      out.write("		       Sequence    SEQ_GUESTBOOK_MESSAGE          이(가) 생성되었습니다.\r\n");
      out.write("           \r\n");
      out.write("          [6] MVC 패턴   \r\n");
      out.write("                 commandHandler.properties\r\n");
      out.write("                 요청URL = 핸들러                \r\n");
      out.write("                 요청URL = 핸들러       \r\n");
      out.write("          [7] 각종 패키지 추가 + 컨트롤러 생성 + 컨트롤러 web.xml 등록\r\n");
      out.write("                 1) days10.guestbook.command 패키지\r\n");
      out.write("                      ㄴ CommandHandler.java 인터페이스  + 복사 붙이기.\r\n");
      out.write("                      ㄴ GetMessageListHandler implements CommandHandler\r\n");
      out.write("                      \r\n");
      out.write("                 2) 컨트롤러 생성   \r\n");
      out.write("                     days10.guestbook.controller.DispatcherServlet    패키지만 생성하고 클래스는 어제 컨트롤러 그대로 복사 붙이기. \r\n");
      out.write("                 3) web.xml 컨트롤러 등록...\r\n");
      out.write("                     web_days09_mvc.xml 파일 안에 서블릿 등록 복사 붙익.\r\n");
      out.write("                          \r\n");
      out.write("          [8] web.xml 등등 설정 확인 - 서버 시작.\r\n");
      out.write("          java.lang.ClassCastException: \r\n");
      out.write("          class days10.guestbook.command.WriteMessageHandler cannot be cast to \r\n");
      out.write("          class days09.mvc.command.CommandHandler \r\n");
      out.write("          (days10.guestbook.command.WriteMessageHandler and days09.mvc.command.CommandHandler are in unnamed module of loader org.apache.catalina.loader.ParallelWebappClassLoader @437f33f9)            \r\n");
      out.write("           \r\n");
      out.write("          at days10.guestbook.controller.DispatcherServlet.init(DispatcherServlet.java:62)      \r\n");
      out.write("          \r\n");
      out.write("          3:09 수업 시작~~\r\n");
      out.write("          [9]  DTO 등록\r\n");
      out.write("          days10.guestbook.domain 패키지 \r\n");
      out.write("               ㄴ Message.java                p 448\r\n");
      out.write("          \r\n");
      out.write("          [10]  DAO 등록\r\n");
      out.write("          days10.guestbook.persistence 패키지 \r\n");
      out.write("               ㄴ IMessage.java 인터페이스\r\n");
      out.write("               ㄴ MessageImpl.java 클래스    p 450\r\n");
      out.write("               \r\n");
      out.write("          [11] 각종 Service 등록                            p 453\r\n");
      out.write("          days10.guestbook.service 패키지 \r\n");
      out.write("               ㄴ (1) p 454  서비스 에서 예외가 발생할 때 사용자 예외클래스 : ServiceException\r\n");
      out.write("               ㄴ (2) GetMessageListService.java 클래스   p 455\r\n");
      out.write("                         ㄴ   GetMessageListHandler  구현\r\n");
      out.write("          \r\n");
      out.write("          4:04 수업~\r\n");
      out.write("          [12] 방명록 목록 \r\n");
      out.write("              days10 폴더\r\n");
      out.write("                  ㄴ guestbook 폴더\r\n");
      out.write("                           ㄴ list.jsp 파일 추가\r\n");
      out.write("                           \r\n");
      out.write("          [13] 방명록 쓰기   \r\n");
      out.write("              list.jsp에서\r\n");
      out.write("              \"방명록 쓰기 열기 \" 클릭           \r\n");
      out.write("              \"메시지 남기기 \" 클릭       \r\n");
      out.write("              (1) WriteMessageService.java\r\n");
      out.write("              (2) WriteMessageHandler.java\r\n");
      out.write("              \r\n");
      out.write("          [14] 방명록 삭제.    \r\n");
      out.write("              확인: list.jsp.\r\n");
      out.write("              \"메시지 삭제하기\"  \r\n");
      out.write("              location.href=\"delete.do?messageId=\"+del_messageId+\"&password=\"+del_password;\r\n");
      out.write("              (1) DeleteMessageService  구현\r\n");
      out.write("              (2) DeleteMessageHandler 구현\r\n");
      out.write("              \r\n");
      out.write("              (테스트)\r\n");
      out.write("              http://localhost/jspPro/days10/guestbook/delete.do?messageId=3&password=1234\r\n");
      out.write("             ㄱ) DB 삭제 확인  X\r\n");
      out.write("             \r\n");
      out.write("             delete.do => DeleteMessageHandler => DeleteMessageService => MessageImpl -> DB \r\n");
      out.write("                 \r\n");
      out.write("           [15] 방명록 수정\r\n");
      out.write("              list.jsp\r\n");
      out.write("              \"수정하기\"  제일 우측에 있는 버튼 클릭     \r\n");
      out.write("              <a href=\"update.do?messageId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ message.message_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">[수정하기]</a>	  \r\n");
      out.write("              => days10.guestbook.command.UpdateMessageHandler  .process(){} \r\n");
      out.write("              => days10.guestbook.service.UpdateMessageService  추가.\r\n");
      out.write("              =>                            update.jsp 포워딩.\r\n");
      out.write("              => \"메시지 수정하기 \" 버튼 클릭.\r\n");
      out.write("                  <form action=\"update.do\" method=\"post\">\r\n");
      out.write("             => days10.guestbook.command.UpdateMessageHandler  .process(){\r\n");
      out.write("                        GET\r\n");
      out.write("                           ㄴ  update.jsp 포워딩.\r\n");
      out.write("                        POST\r\n");
      out.write("                            ㄴ 새로 수정된 값\r\n");
      out.write("                                dao.update( con, message);\r\n");
      out.write("                                list.do. 포워딩.   \r\n");
      out.write("             }      \r\n");
      out.write("             \r\n");
      out.write("             .카톡.  : . 수정 처리 했습니다.\r\n");
      out.write("             \r\n");
      out.write("             내일 :  답변형 게시판 + MVC \r\n");
      out.write("</pre> \r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
